


public CustomPersistentCookieJar(CookieCache cache, CookiePersistor persistor, List<Cookie>  sessionCookies) {
    super(cache, persistor);
    this.cache = cache;
    this.persistor = persistor;
    this.sessionCookies = sessionCookies;
}

@Override
public synchronized void saveFromResponse(HttpUrl url, List<Cookie> cookies) {
    //super.saveFromResponse(url, cookies);
    cache.addAll(cookies);
    persistor.saveAll(filterPersistentCookies(cookies));
}

private List<Cookie> filterPersistentCookies(List<Cookie> cookies) {
    List<Cookie> persistentCookies = new ArrayList<>();

    for (Cookie cookie : cookies) {
        if (cookie.persistent()) {
            persistentCookies.add(cookie);
        }else{
            sessionCookies.add(cookie); //Hoelee added
        }
    }
    return persistentCookies;
}

@Override
public synchronized void clearSession() {
    super.clearSession();
    sessionCookies = new ArrayList<>(); //Hoelee added
}

@Override
public synchronized void clear() {
    super.clear();
    sessionCookies = new ArrayList<>(); //Hoelee added
}

}